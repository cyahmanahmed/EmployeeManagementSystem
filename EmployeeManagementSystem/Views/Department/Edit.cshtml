@model EmployeeManagementSystem.Models.Department

@{
    ViewData["Title"] = "Edit Department";
}

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold">Edit Department</h2>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to List
        </a>
    </div>

    <div class="card shadow-sm border-0">
        <div class="card-body">
            <form asp-action="Edit" method="post" class="needs-validation" novalidate>
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                <input type="hidden" asp-for="DepartmentID" />

                <div class="mb-3">
                    <label asp-for="DepartmentName" class="form-label"></label>
                    <input asp-for="DepartmentName" class="form-control" />
                    <span asp-validation-for="DepartmentName" class="text-danger small"></span>
                </div>

                <div class="form-check mb-3">
                    <input class="form-check-input" asp-for="IsActive" />
                    <label class="form-check-label" asp-for="IsActive">
                        @Html.DisplayNameFor(model => model.IsActive)
                    </label>
                </div>

                <div class="d-flex justify-content-end gap-2">
                    <button type="submit" class="btn btn-primary px-4">
                        <i class="bi bi-check-circle me-1"></i> Save
                    </button>
                    <a asp-action="Index" class="btn btn-secondary px-4">
                        <i class="bi bi-x-circle me-1"></i> Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
